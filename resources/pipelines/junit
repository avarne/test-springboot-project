env.GIT_COMMIT_MSG=""
env.GIT_COMMIT_AUTHOR=""
env.Git_COMMIT_DATE=""
env.AUTH_TOKEN="eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJlbnRJZCI6NTA1MDAsImV4cCI6MTkyNDk5MTk5OSwidXNlcklkIjoiNTA1MDAifQ.O9F1EqX6tipj8AGv5QuTAIgw0QaWwt5y33kO7bb26A0"

pipeline
	{
		agent 
			{
				label 'master'
			}
		stages
			{
				stage('Run Maven Junit')
					{
						steps
							{
								echo "execute junit tests"
								sh "mvn clean test"
								sh "cd target/surefire-reports && zip -r junitresults.zip . && aws s3 cp junitresults.zip s3://ibmpilot/junit/junitresults.zip"
							}

					}

				stage('Run Sonar')
					{	
						steps
							{
								echo "execute Sonar"
								sh "mvn sonar:sonar -Dsonar.projectKey=spring-boot-mvn-courses -Dsonar.host.url=https://ibm-sonar.digite.com -Dsonar.login=7a0da1e648e56a6bfce26777c747b5cf6e0320e4"
							}
					}

				stage('Create Artifact')
					{
						steps
							{
								echo "Create Artifact"
								sh "mvn clean install"
								sh "cd target && aws s3 cp SwiftEntp-services-0.0.1-SNAPSHOT.jar s3://ibmpilot/artefact/ENTPservice.jar"
							}
					}

				stage('Add oncomit instance')
					{
						steps
							{
								script
									{
										echo 'Hello World'

					                    echo "'$GIT_COMMIT'" 

					                    echo "'$GIT_URL'"

					                    def gitauthor = sh(script: 'git log -1 --pretty=format:%an', returnStdout: true)
					                    echo "'$gitauthor'"
					                    env.Git_COMMIT_AUTHOR = gitauthor
					                    echo "'$Git_COMMIT_AUTHOR'"

					                    def gitmsg = sh(script: "git log --format=format:%b -1", returnStdout: true)
					                    echo "'$gitmsg'"
					                    env.GIT_COMMIT_MSG = gitmsg
					                    echo "'$GIT_COMMIT_MSG'"

					                    def itemarr = GIT_COMMIT_MSG.split(':')
					                    echo "'$itemarr'"
					                    echo "${itemarr[0]} ${itemarr[1]} ${itemarr[2]}"

					                    echo "${itemarr[0]}"
					                    env.PROJ_CODE=${itemarr[0]}
					                    echo "'prjcode is $PROJ_CODE'"

					                    echo "${itemarr[1]}"
					                    env.ITEM_CODE=${itemarr[1]}
					                    echo "'itemcode is $ITEM_CODE'"

					                    Git_COMMIT_DATE = sh(script: "git log -1 --format=format:%cd", returnStdout: true)
					                    echo "'$Git_COMMIT_DATE'"

					                    def gitdif = sh(script: "git diff --name-only HEAD HEAD~1", returnStdout: true)
					                    /env.GIT_DIF = gitdif
					                    echo "'$gitdif'"

					                    def gitdifarr = gitdif.split('\n')
					                    echo "'$gitdifarr'"
					                    echo "${gitdifarr[0]} ${gitdifarr[1]}"
					                    env.GIT_DIF=${gitdifarr[0]}^^${gitdifarr[1]}
					                    echo "'$GIT_DIF'"

					                    def gitdifarr = GIT_DIF.split('\n')
					                    echo "'$gitdifarr'"
					                    echo "${gitdifarr[0]} ${gitdifarr[1]}"
					                    
					                    echo "'$GIT_COMMIT' '$GIT_URL' '$Git_COMMIT_DATE' '$GIT_COMMIT_AUTHOR' '$GIT_COMMIT_MSG' '$GIT_BRANCH' '$PROJ_CODE' '$ITEM_CODE'"
					                    
					                    echo 'executing curl to create oncomit instance'
					                    sh """curl -X POST https://ibm.digite.com/rest/v2/api/EFormService/createEFormItemData -H "accept: application/json" -H "AuthorizationToken: $AUTH_TOKEN" -H "Content-Type: application/json" -d '{\"data\":{ \"FieldsData\":[{ \"Name\" : \"$GIT_COMMIT\", \"Author\" : \"$GIT_COMMIT_AUTHOR\", \"Commit Date\" : \"$Git_COMMIT_DATE\", \"Commit Comment\" : \"$GIT_COMMIT_MSG\", \"GitURL\" : \"$GIT_URL\", \"GitBranch\" : \"$GIT_BRANCH\", \"Project Code\" : \"$PROJ_CODE\", \"Item Code\" : \"$ITEM_CODE\", \"Files Changed\" : \"$GIT_DIF\" }], \"CreatorLoginId\":\"admin_IBM\", \"OwnerType\":\"Prj\", \"OwnerCode\":\"IBMC000001INTG\", \"ItemType\":\"GCT_f\" }}' """


					                    echo 'executing curl to create build instance'
					                    sh """curl -X POST "https://ibm.digite.com/rest/v2/api/EFormService/createEFormItemData" -H "accept: application/json" -H "AuthorizationToken: $AUTH_TOKEN" -H "Content-Type: application/json" -d '{\"data\":{ \"FieldsData\":[{ \"Name\" : \"$GIT_COMMIT\", }], \"CreatorLoginId\":\"admin_IBM\", \"OwnerType\":\"Prj\", \"OwnerCode\":\"IBMC000001INTG\", \"ItemType\":\"bld_f\" }}'"""

									}
							}
					}
			}
	}